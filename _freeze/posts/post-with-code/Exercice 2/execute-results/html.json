{
  "hash": "8356ee7b47ceb5392fab6b4c1df841f8",
  "result": {
    "markdown": "---\ntitle: \"Exercice 2\"\nauthor: \"Valorys Trillaud\"\ndate: \"2024-03-04\"\ncategories: [news, analysis]\n---\n\n\n# Exercice semaine 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(purrr)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(stringr)\n```\n:::\n\n\n## Question 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist_tables <-\n  session(\"https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\") |>\n  html_elements(\".wikitable\") |>\n  html_table()\n```\n:::\n\n\nCette commande créer une liste, list_tables qui contient 6 tables.\n\n## Question 2\n\n### Nettoyer la base de données\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Créez un objet contenant le premier élément de list_tables\ndata_medaillles_sport_ete <- list_tables[[1]]\n\n# Supprimez la première colonne et la première ligne\ndata_medaillles_sport_ete <- data_medaillles_sport_ete[-1,-1]\n\n# Renommez les colonnes\ncolnames(data_medaillles_sport_ete) <- c(\"Discipline\", \"Annees\", \"Editions\",\n                                          \"Epreuves_2020\", \"Or\", \"Argent\", \n                                         \"Bronze\", \"Total\", \"Athletes_medailles\",\n                                          \"Athletes_or\")\n\n# Convertir en colonnes d'entiers\ndata_medaillles_sport_ete[c('Editions', 'Epreuves_2020', 'Or', 'Argent', 'Bronze', 'Total')] <- lapply(data_medaillles_sport_ete[c('Editions', 'Epreuves_2020', 'Or', 'Argent', 'Bronze', 'Total')], as.integer)\n```\n:::\n\n\n## Question 3\n\n### Les 3 disciplines avec le plus de médailles distribuées depuis le début de l'histoire des jeux olympiques.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_medaillles_sport_ete |> \n  arrange(desc(Total)) |> \n  head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 10\n  Discipline             Annees Editions Epreuves_2020    Or Argent Bronze Total\n  <chr>                  <chr>     <int>         <int> <int>  <int>  <int> <int>\n1 Athlétisme             Depui…       29            48  1028   1030   1027  3085\n2 Natation(hommes, femm… Depui…       29            37   607    604    603  1814\n3 Lutte                  1896,…       28            18   430    429    499  1358\n# ℹ 2 more variables: Athletes_medailles <chr>, Athletes_or <chr>\n```\n:::\n:::\n\n\nLes trois disciplines avec le plus de médailles distribuées sont l'athlétisme, la nation et la lutte.\n\n## Question 4\n\n### Les disciplines avec le moins d'épreuves en 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_medaillles_sport_ete |> \n  arrange(Epreuves_2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 10\n   Discipline            Annees Editions Epreuves_2020    Or Argent Bronze Total\n   <chr>                 <chr>     <int>         <int> <int>  <int>  <int> <int>\n 1 Football              1900–…       27             2    34     34     35   103\n 2 Golf                  1900–…        4             2     8      8      9    19\n 3 Handball              1936,…       14             2    26     26     26    78\n 4 Hockey sur gazon      1908,…       24             2    35     35     36   106\n 5 Natation synchronisée Depui…       10             2    20     18     19    57\n 6 Pentathlon moderne    Depui…       25             2    42     42     42   126\n 7 Volley-ball           Depui…       15             2    30     30     30    90\n 8 Water polo            1900,…       26             2    28     28     29    85\n 9 Triathlon             Depui…        6             3    13     13     13    39\n10 Basket-ball           Depui…       20             4    32     32     32    96\n# ℹ 20 more rows\n# ℹ 2 more variables: Athletes_medailles <chr>, Athletes_or <chr>\n```\n:::\n:::\n\n\nLes sports avec le moins d'épreuves en 2020 et qui avaient que 2 épreuves sont le Football, le Golf, le Handball, le Hockey sur gazon, la Natation synchronisée, le Pentathlon moderne, le Volley-ball et le Water polo.\n\n## Question 5, 6 et 7\n\n### Les questions 5, 6 et 7 seront traité en même temps le but est d'avoir une fonction dénérique qui nous renseigne sur le nombre total d'apparence des disciplines aux JO d'été.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextract_numbers <- function(str) {\n  as.integer(str_extract_all(str, \"\\\\d+\")[[1]])\n}\n\n\n# Fonction de calcul du nombre de JO d'été\ncalcul_nb_editions <- function(date) {\n  r <- strsplit(as.character(date), \",\")[[1]]\n  summer_olympics_years <- integer(0)\n\n  for (part in r) {\n    if (grepl(\"depuis\", part)) {\n      debut <- extract_numbers(part)\n      summer_olympics_years <- c(summer_olympics_years, seq(debut, 2020, by = 4))\n    } else if (grepl(\"-\", part)) {\n      date_debut <- as.integer(strsplit(part, \"-\")[[1]])\n      summer_olympics_years <- c(summer_olympics_years, seq(date_debut[1], date_debut[2], by = 4))\n    } else if (is.numeric(part)) {\n      summer_olympics_years <- c(summer_olympics_years, part)\n    } else {\n      debut <- extract_numbers(part)\n      summer_olympics_years <- c(summer_olympics_years, debut)\n    }\n  }\n\n  # Exclure les années sans JO\n  summer_olympics_years <- setdiff(summer_olympics_years, c(1916, 1940, 1944))\n  nb_editions <- length(unique(summer_olympics_years))\n  return(nb_editions)\n}\n\n# Exemples d'utilisation de la fonction\ncalcul_nb_editions(2000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\ncalcul_nb_editions(\"2000\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\ncalcul_nb_editions(\"2000-2012\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n\n```{.r .cell-code}\ncalcul_nb_editions(\"depuis 2000\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions(\"1896, 1904, depuis 1920\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 26\n```\n:::\n:::\n\n\nL'appel calcul_nb_editions(\"1896, 1904, depuis 1920\") rend bien 26.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions(2000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n:::\n\n\nL'appel calcul_nb_editions(2000) rend 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions(\"1904–1924, depuis 1948\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 21\n```\n:::\n:::\n\n\nL'appel calcul_nb_editions(\"1904--1924, depuis 1948\") rend 21.\n\n## Question 8\n\n### Implémentez une fonction calcul_medailles_individuelles qui détermine le nombre de médaille maximal a été obtenu par un athlète lors d'olympiades.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_medailles_individuelles <- function(data_medaillles_sport_ete){\n  medailles <- \"\\\\(\\\\d+-\\\\d+-\\\\d+\\\\)\"\n  data_medaillles_sport_ete$Athletes_medailles <- regmatches(data_medaillles_sport_ete$Athletes_medailles, gregexpr(medailles, data_medaillles_sport_ete$Athletes_medailles))\n  data_medaillles_sport_ete$Athletes_medailles <- sapply(data_medaillles_sport_ete$Athletes_medailles, function(x) ifelse(length(x) > 0, x[1], NA))\n  medaille_max <- max(sapply(strsplit(gsub(\"\\\\(|\\\\)\", \"\", data_medaillles_sport_ete$Athletes_medailles), \"-\"), function(x) sum(as.numeric(x))))\n  return(medaille_max)\n}\n\ncalcul_medailles_individuelles(data_medaillles_sport_ete)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 28\n```\n:::\n:::\n\n\nLe nombre de médaille maximal obtenu par un athlète lors d'olympiades est de 28.\n\n## Question 10\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextraire_nationalite_athlete <- function(chaine){\n  nationalites_match <- gregexpr(\"\\\\(([A-Z]+)\\\\)\", chaine)\n  nationalites <- regmatches(chaine, nationalites_match)[[1]]\n  nationalites <- setNames(rep(1, length(nationalites)), nationalites)\n  return(nationalites)\n}\n\nextraire_nationalite_athlete(\"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(FIN) (USA) \n    1     1 \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}